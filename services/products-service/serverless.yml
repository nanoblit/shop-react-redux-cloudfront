service: products

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x

  stage: dev
  region: eu-north-1
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:eu-north-1:*:*"
        - Effect: Allow
          Action:
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
          Resource: !GetAtt CatalogItemsQueue.Arn
        - Effect: Allow
          Action:
            - sns:Publish
          Resource: !GetAtt CreateProductTopic.TopicArn

useDotenv: true

functions:
  getProductsList:
    handler: getProductsList.handler
    events:
      - http:
          path: products
          method: get
    package:
      include:
        - node_modules/**
  getProductsById:
    handler: getProductsById.handler
    events:
      - http:
          path: products/{productId}
          method: get
    package:
      include:
        - node_modules/**
  createProduct:
    handler: createProduct.handler
    events:
      - http:
          path: products
          method: post
    package:
      include:
        - node_modules/**
  catalogBatchProcess:
    handler: catalogBatchProcess.handler
    events:
      - sqs:
          arn: !GetAtt CatalogItemsQueue.Arn
          batchSize: 5
    package:
      include:
        - node_modules/**

resources:
  Resources:
    CatalogItemsQueue:
      Type: AWS::SQS::Queue
    CreateProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        Subscription:
          - Endpoint: x@xtest123test123test123x.com
            Protocol: email
